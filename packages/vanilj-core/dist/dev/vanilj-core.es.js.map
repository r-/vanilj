{"version":3,"file":"vanilj-core.es.js","sources":["../../src/vanilj-core.js","../../src/html-template.js","../../src/index.js"],"sourcesContent":["// vanilj-core.js\r\n\r\n// ==== Plugin System ====\r\n\r\nconst plugins = [];\r\n\r\nexport function useVaniljPlugin(fn) {\r\n  plugins.push(fn);\r\n}\r\n\r\nfunction notifyPlugins(event, data) {\r\n  for (const p of plugins) p(event, data);\r\n}\r\n\r\n// ==== Scoped Effect Cleanup Context ====\r\n\r\nlet scopedCleanupStack = [];\r\n\r\nexport function runWithScopedEffects(fn) {\r\n  const cleanupFns = [];\r\n  scopedCleanupStack.push(cleanupFns);\r\n  try {\r\n    return fn();\r\n  } finally {\r\n    const toCleanup = scopedCleanupStack.pop();\r\n    toCleanup.forEach(fn => fn());\r\n  }\r\n}\r\n\r\nexport function registerScopedEffectCleanup(fn) {\r\n  const stack = scopedCleanupStack[scopedCleanupStack.length - 1];\r\n  if (stack) stack.push(fn);\r\n}\r\n\r\n// ==== Reactivity System ====\r\n\r\nconst effectStack = [];\r\nlet isBatching = false;\r\nconst pendingEffects = new Set();\r\nlet currentCleanupStack = null;\r\n\r\nexport function signal(initialValue) {\r\n  let value = initialValue;\r\n  const subscribers = new Set();\r\n\r\n  function track() {\r\n    if (effectStack.length) {\r\n      subscribers.add(effectStack[0]);\r\n    }\r\n  }\r\n\r\n  function notify() {\r\n    notifyPlugins(\"signal:update\", { newValue: value });\r\n    for (const fn of subscribers) {\r\n      if (isBatching) pendingEffects.add(fn);\r\n      else fn();\r\n    }\r\n  }\r\n\r\n  const s = {\r\n    get value() {\r\n      track();\r\n      return value;\r\n    },\r\n    set value(newValue) {\r\n      if (newValue !== value) {\r\n        value = newValue;\r\n        notify();\r\n      }\r\n    },\r\n    peek: () => value,\r\n    subscribe: (fn) => {\r\n      subscribers.add(fn);\r\n      return () => subscribers.delete(fn);\r\n    },\r\n    toString: () => `Signal {${value}}`\r\n  };\r\n\r\n  notifyPlugins(\"signal:create\", { signal: s, initialValue });\r\n  return s;\r\n}\r\n\r\nexport function readonly(source) {\r\n  return {\r\n    get value() { return source.value },\r\n    set value(_) {\r\n      throw new Error(\"[Vanilj] Cannot assign to readonly signal.\");\r\n    },\r\n    peek: source.peek,\r\n    subscribe: source.subscribe,\r\n    toString: () => `Readonly {${source.value}}`\r\n  };\r\n}\r\n\r\nexport function computed(fn) {\r\n  const out = signal();\r\n  effect(() => out.value = fn());\r\n  const c = {\r\n    get value() { return out.value },\r\n    peek: () => out.peek(),\r\n    subscribe: out.subscribe,\r\n    toString: () => `Computed {${out.value}}`\r\n  };\r\n  notifyPlugins(\"computed:create\", { computed: c });\r\n  return c;\r\n}\r\n\r\nexport function effect(fn) {\r\n  const cleanupFns = [];\r\n\r\n  const cleanup = () => {\r\n    cleanupFns.forEach(fn => fn());\r\n    cleanupFns.length = 0;\r\n    pendingEffects.delete(run);\r\n  };\r\n\r\n  const run = () => {\r\n    cleanup();\r\n    currentCleanupStack = cleanupFns;\r\n    effectStack.unshift(run);\r\n    try {\r\n      notifyPlugins(\"effect:run\", { fn });\r\n      fn(cb => cleanupFns.push(cb)); // ⬅️ passes internal cleanup hook\r\n    } finally {\r\n      effectStack.shift();\r\n      currentCleanupStack = null;\r\n    }\r\n  };\r\n\r\n  run();\r\n  registerScopedEffectCleanup(cleanup);\r\n  return cleanup;\r\n}\r\n\r\nexport function safeEffect(fn, nodeRef) {\r\n  const run = () => {\r\n    if (!nodeRef.current?.isConnected) return;\r\n    fn();\r\n  };\r\n  return effect(run);\r\n}\r\n\r\nexport function onCleanup(fn) {\r\n  if (currentCleanupStack) currentCleanupStack.push(fn);\r\n}\r\n\r\nexport function batch(fn) {\r\n  isBatching = true;\r\n  try {\r\n    fn();\r\n  } finally {\r\n    isBatching = false;\r\n    const toRun = [...pendingEffects];\r\n    pendingEffects.clear();\r\n    toRun.forEach(fn => fn());\r\n  }\r\n}\r\n\r\n// ==== DOM System ====\r\n\r\nconst svgTags = new Set([\r\n  \"svg\", \"path\", \"circle\", \"rect\", \"line\", \"g\", \"text\", \"polygon\", \"polyline\", \"ellipse\", \"use\", \"defs\", \"marker\", \"clipPath\", \"mask\"\r\n]);\r\n\r\nexport function isSignal(x) {\r\n  return typeof x === \"object\" && x !== null && \"value\" in x && typeof x.subscribe === \"function\";\r\n}\r\n\r\nfunction deepFlatten(arr) {\r\n  return arr.flatMap(x => Array.isArray(x) ? deepFlatten(x) : x);\r\n}\r\n\r\nexport function wrap(child) {\r\n  // Node → return as-is\r\n  if (child instanceof Node) return child\r\n\r\n  // Signal/computed → unwrap\r\n  if (isSignal(child)) return wrap(child.value)\r\n\r\n  // Function → create effect scope\r\n  if (typeof child === 'function') {\r\n    const anchor = document.createComment('wrap')\r\n    let lastNodes = []\r\n\r\n    effect(() => {\r\n      const value = child()\r\n      const resolved = wrap(value)\r\n      const nodes = Array.isArray(resolved) ? resolved : [resolved]\r\n\r\n      // Replace previous DOM\r\n      for (const n of lastNodes) {\r\n        if (n.parentNode) n.parentNode.removeChild(n)\r\n      }\r\n\r\n      for (const n of nodes) {\r\n        anchor.parentNode?.insertBefore(n, anchor)\r\n      }\r\n\r\n      lastNodes = nodes\r\n    })\r\n\r\n    return anchor\r\n  }\r\n\r\n  // Array → recursively wrap\r\n  if (Array.isArray(child)) {\r\n    const frag = document.createDocumentFragment()\r\n    for (const c of child) {\r\n      const w = wrap(c)\r\n      if (Array.isArray(w)) w.forEach(n => frag.appendChild(n))\r\n      else if (w) frag.appendChild(w)\r\n    }\r\n    return frag\r\n  }\r\n\r\n  // Fallback: text node\r\n  return document.createTextNode(child?.toString?.() ?? '')\r\n}\r\n\r\nexport function createElement(tag, props, ...children) {\r\n  const isSVG = svgTags.has(tag);\r\n  const el = isSVG\r\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n    : document.createElement(tag);\r\n\r\n  for (const [key, val] of Object.entries(props || {})) {\r\n    if (key === \"ref\" && typeof val === \"function\") {\r\n      val(el);\r\n    } else if (key.startsWith(\"on\") && typeof val === \"function\") {\r\n      el[key.toLowerCase()] = val;\r\n    } else if (typeof val === \"function\") {\r\n      // ✅ NEW: Automatically reactive attribute function\r\n      effect(() => {\r\n        if (!el.isConnected) return;\r\n        const result = val();\r\n        if (typeof result === \"boolean\") {\r\n          if (result) el.setAttribute(key, \"\");\r\n          else el.removeAttribute(key);\r\n        } else {\r\n          el.setAttribute(key, result);\r\n        }\r\n      });\r\n    } else if (key === \"value\" && isSignal(val)) {\r\n      effect(() => {\r\n        if (el.isConnected) el.value = val.value;\r\n      });\r\n    } else if (isSignal(val)) {\r\n      effect(() => {\r\n        if (el.isConnected) el.setAttribute(key, val.value);\r\n      });\r\n    } else if (key === \"value\") {\r\n      el.value = val;\r\n    } else {\r\n      el.setAttribute(key, val);\r\n    }\r\n  }\r\n\r\n  for (const child of deepFlatten(children)) {\r\n    const node = wrap(child);\r\n    if (Array.isArray(node)) node.forEach(n => el.appendChild(n));\r\n    else if (node != null) el.appendChild(node);\r\n  }\r\n\r\n  return el;\r\n}\r\n\r\nexport const tags = new Proxy({}, {\r\n  get: (_, tag) => createElement.bind(null, tag)\r\n});\r\n\r\n// ==== Mount / Unmount ====\r\n\r\nexport function mount(target, node) {\r\n  target.appendChild(node);\r\n}\r\n\r\nexport function unmount(node) {\r\n  if (node && node.parentNode) {\r\n    node.parentNode.removeChild(node);\r\n  }\r\n}\r\n\r\n// ==== Hydration ====\r\n\r\nexport function hydrate(existingNode, viewFn) {\r\n  const rendered = viewFn();\r\n  if (existingNode && rendered !== existingNode) {\r\n    existingNode.replaceWith(rendered);\r\n  }\r\n  return rendered;\r\n}\r\n\r\n// ==== Refs ====\r\n\r\nexport function ref(initialValue = null) {\r\n  return { current: initialValue };\r\n}\r\n\r\n// ==== Utilities ====\r\n\r\nexport function generateUUID() {\r\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\r\n    try {\r\n      return crypto.randomUUID();\r\n    } catch (err) {\r\n      console.warn('crypto.randomUUID failed, using fallback:', err);\r\n    }\r\n  }\r\n\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    const r = Math.random() * 16 | 0;\r\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function generateShortUUID() {\r\n  return generateUUID().slice(0, 8);\r\n}\r\n","// framework/vanilj/html-template.js\r\n\r\nimport { wrap, isSignal, effect } from './vanilj-core.js'\r\n\r\nexport function html(strings, ...values) {\r\n  const template = document.createElement('template')\r\n\r\n  // 1. Inject placeholders\r\n  let markup = ''\r\n  for (let i = 0; i < strings.length; i++) {\r\n    markup += strings[i]\r\n    if (i < values.length) {\r\n      markup += `<!--::${i}::-->`\r\n    }\r\n  }\r\n\r\n  // 2. ROBUST FIX: Pre-process markup to handle attribute spreading properly\r\n  // Replace problematic patterns where comment placeholders appear as attribute names\r\n  markup = markup.replace(/(\\s+)<!--::(\\d+)::-->\\s*>/g, (match, whitespace, index) => {\r\n    // This handles cases like: <div ${props}> where the comment becomes an attribute name\r\n    // We'll move the placeholder to be a child instead\r\n    return `${whitespace}data-vanilj-props=\"${index}\"><!--::${index}::-->`\r\n  })\r\n\r\n  template.innerHTML = markup.trim()\r\n  const content = template.content.cloneNode(true)\r\n\r\n  // 3. Handle special data-vanilj-props attributes (our fix for attribute spreading)\r\n  const elementsWithProps = content.querySelectorAll('[data-vanilj-props]')\r\n  elementsWithProps.forEach(el => {\r\n    const propsIndex = el.getAttribute('data-vanilj-props')\r\n    const value = values[Number(propsIndex)]\r\n    \r\n    if (value && typeof value === 'object') {\r\n      // Apply the props object to the element\r\n      for (const [key, val] of Object.entries(value)) {\r\n        bindAttribute(el, key, val)\r\n      }\r\n    }\r\n    \r\n    // Remove the temporary attribute\r\n    el.removeAttribute('data-vanilj-props')\r\n    \r\n    // Remove the corresponding comment placeholder\r\n    const walker = document.createTreeWalker(el, NodeFilter.SHOW_COMMENT)\r\n    while (walker.nextNode()) {\r\n      const node = walker.currentNode\r\n      if (node.nodeValue === `::${propsIndex}::`) {\r\n        node.parentNode.removeChild(node)\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  // 4. Replace comment placeholders with reactive DOM children\r\n  const walker = document.createTreeWalker(content, NodeFilter.SHOW_COMMENT)\r\n  const placeholderNodes = []\r\n  \r\n  while (walker.nextNode()) {\r\n    const node = walker.currentNode\r\n    const match = node.nodeValue?.match(/^::(\\d+)::$/)\r\n    if (match) {\r\n      placeholderNodes.push({\r\n        node,\r\n        index: Number(match[1]),\r\n        parent: node.parentNode\r\n      })\r\n    }\r\n  }\r\n  \r\n  // Now process all placeholders\r\n  placeholderNodes.forEach(({ node, index, parent }) => {\r\n    const value = values[index]\r\n\r\n    if (typeof value === 'function' || isSignal(value)) {\r\n      const start = document.createComment(`v-start:${index}`)\r\n      const end = document.createComment(`v-end:${index}`)\r\n      parent.insertBefore(start, node)\r\n      parent.insertBefore(end, node)\r\n\r\n      effect(() => {\r\n        let cur = start.nextSibling\r\n        while (cur && cur !== end) {\r\n          const next = cur.nextSibling\r\n          cur.remove()\r\n          cur = next\r\n        }\r\n\r\n        const resolved = wrap(typeof value === 'function' ? value() : value.value)\r\n        if (Array.isArray(resolved)) {\r\n          resolved.forEach(n => end.before(n))\r\n        } else if (resolved instanceof Node) {\r\n          end.before(resolved)\r\n        } else if (resolved != null) {\r\n          end.before(document.createTextNode(String(resolved)))\r\n        }\r\n      })\r\n    } else {\r\n      const resolved = wrap(value)\r\n      if (Array.isArray(resolved)) {\r\n        resolved.forEach(n => parent.insertBefore(n, node))\r\n      } else if (resolved instanceof Node) {\r\n        parent.insertBefore(resolved, node)\r\n      } else if (resolved != null) {\r\n        parent.insertBefore(document.createTextNode(String(resolved)), node)\r\n      }\r\n    }\r\n\r\n    parent.removeChild(node)\r\n  })\r\n\r\n  // 5. Replace attribute placeholders\r\n  const elements = content.querySelectorAll('*');\r\n  const placeholderRegex = /<!--::(\\d+)::--/; // For matching (note: no closing > due to browser parsing)\r\n  const placeholderSplitRegex = /(<!--::\\d+::-->)/; // For splitting\r\n\r\n  elements.forEach(el => {\r\n    for (const attr of [...el.attributes]) {\r\n      // Case 1: Check if the attribute NAME is a placeholder (for prop spreads like ${props})\r\n      // The browser parses <!--::2::--> as <!--::2::-- (truncates at >)\r\n      const spreadMatch = attr.name.match(placeholderRegex);\r\n      if (spreadMatch) {\r\n        const i = Number(spreadMatch[1]);\r\n        const value = values[i];\r\n        // The value here should be an object of attributes\r\n        const entries = typeof value === 'function' ? value() : value;\r\n\r\n        if (entries && typeof entries === 'object') {\r\n          for (const [k, v] of Object.entries(entries)) {\r\n            bindAttribute(el, k, v);\r\n          }\r\n        }\r\n        el.removeAttribute(attr.name); // Remove the placeholder attribute\r\n        continue; // Move to the next attribute on the element\r\n      }\r\n\r\n      // Case 2: Check if the attribute VALUE contains a placeholder\r\n      if (!attr.value.includes('<!--::')) {\r\n        continue; // No placeholders in this attribute's value, skip it\r\n      }\r\n\r\n      const raw = attr.value;\r\n      const parts = raw.split(placeholderSplitRegex).filter(part => part !== '');\r\n\r\n      const dynamicParts = parts.map(part => {\r\n        const match = part.match(placeholderRegex);\r\n        if (match) {\r\n          const i = Number(match[1]);\r\n          return values[i];\r\n        }\r\n        return part;\r\n      });\r\n\r\n      el.removeAttribute(attr.name);\r\n\r\n      // ✅ FIX: Prevent calling event handler functions\r\n      // Check if this is an event handler with a single function\r\n      const isSingleFunction = dynamicParts.length === 1 && typeof dynamicParts[0] === 'function';\r\n      const isEventHandler = attr.name.startsWith('on');\r\n      \r\n      if (isEventHandler && isSingleFunction) {\r\n        bindAttribute(el, attr.name, dynamicParts[0]);\r\n        continue;\r\n      }\r\n\r\n      // Optimize: static or single dynamic (non-event handlers)\r\n      if (dynamicParts.length === 1 && !isEventHandler) {\r\n        bindAttribute(el, attr.name, dynamicParts[0]);\r\n        continue;\r\n      }\r\n      \r\n      // For event handlers that aren't single functions, avoid reactive effects\r\n      if (isEventHandler) {\r\n        // Just bind the first dynamic part directly for event handlers\r\n        bindAttribute(el, attr.name, dynamicParts[0]);\r\n        continue;\r\n      }\r\n\r\n      // Reactive merged string\r\n      effect(() => {\r\n        const result = dynamicParts.map(p =>\r\n          typeof p === 'function' ? p() :\r\n          isSignal(p) ? p.value :\r\n          p\r\n        ).join('');\r\n        bindAttribute(el, attr.name, result);\r\n      });\r\n    }\r\n  });\r\n\r\n  return content\r\n}\r\n\r\n// === Attribute Binding Logic ===\r\nfunction bindAttribute(el, name, value) {\r\n  if (name.startsWith('on') && typeof value === 'function') {\r\n    el[name.toLowerCase()] = value\r\n    return\r\n  }\r\n\r\n  const isDOMProp = name in el\r\n\r\n  const apply = v => {\r\n    if (typeof v === 'boolean') {\r\n      if (isDOMProp) el[name] = v\r\n      else v ? el.setAttribute(name, '') : el.removeAttribute(name)\r\n    } else {\r\n      if (isDOMProp) el[name] = v\r\n      else el.setAttribute(name, v)\r\n    }\r\n  }\r\n\r\n  if (isSignal(value)) {\r\n    effect(() => apply(value.value))\r\n  } else if (typeof value === 'function') {\r\n    effect(() => apply(value()))\r\n  } else {\r\n    apply(value)\r\n  }\r\n}\r\n\r\n/**\r\n * VanilJ HTML Template Engine (Fixed)\r\n * ------------------------------------\r\n * ✅ Robust handling of attribute spreading\r\n * ✅ Pre-processes markup to avoid browser parsing issues\r\n * ✅ Maintains full reactivity support\r\n * ✅ Supports:\r\n *    - Reactive children via ${signal} or ${() => ...}\r\n *    - Object spread for attributes: ${props}\r\n *    - Static + dynamic string merge: class=\"a ${b} c\"\r\n *    - Safe event handler binding: oninput=\"${fn}\"\r\n *\r\n * 🧠 Fix Strategy:\r\n *    - Detects problematic ${props}> patterns\r\n *    - Converts them to data-vanilj-props attributes\r\n *    - Processes props objects before browser parsing\r\n *    - Maintains compatibility with existing components\r\n */\r\n","// packages/vanilj-core/src/index.js - Core framework entry point\r\n\r\n// Import everything from vanilj-core\r\nimport {\r\n  useVaniljPlugin,\r\n  runWithScopedEffects,\r\n  registerScopedEffectCleanup,\r\n  signal,\r\n  readonly,\r\n  computed,\r\n  effect,\r\n  safeEffect,\r\n  onCleanup,\r\n  batch,\r\n  isSignal,\r\n  wrap,\r\n  createElement,\r\n  tags,\r\n  mount,\r\n  unmount,\r\n  hydrate,\r\n  ref,\r\n  generateUUID,\r\n  generateShortUUID\r\n} from './vanilj-core.js';\r\n\r\n// Import HTML template system\r\nimport { html } from './html-template.js';\r\n\r\n// Re-export everything as named exports\r\nexport {\r\n  // Plugin system\r\n  useVaniljPlugin,\r\n  \r\n  // Scoped effects\r\n  runWithScopedEffects,\r\n  registerScopedEffectCleanup,\r\n  \r\n  // Reactivity system\r\n  signal,\r\n  readonly,\r\n  computed,\r\n  effect,\r\n  safeEffect,\r\n  onCleanup,\r\n  batch,\r\n  \r\n  // DOM system\r\n  isSignal,\r\n  wrap,\r\n  createElement,\r\n  tags,\r\n  \r\n  // Mount/unmount\r\n  mount,\r\n  unmount,\r\n  hydrate,\r\n  \r\n  // Refs\r\n  ref,\r\n  \r\n  // Utilities\r\n  generateUUID,\r\n  generateShortUUID,\r\n  \r\n  // HTML template system\r\n  html\r\n};\r\n\r\n// Default export - core vanilj object\r\nconst VaniljCore = {\r\n  // Core reactivity\r\n  signal,\r\n  readonly,\r\n  computed,\r\n  effect,\r\n  batch,\r\n  \r\n  // DOM\r\n  createElement,\r\n  tags,\r\n  mount,\r\n  unmount,\r\n  \r\n  // Template\r\n  html,\r\n  \r\n  // Utilities\r\n  ref,\r\n  generateUUID,\r\n  generateShortUUID\r\n};\r\n\r\nexport default VaniljCore;"],"names":["fn","_a","walker"],"mappings":"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"}