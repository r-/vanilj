{"version":3,"file":"vanilj-core.umd.js","sources":["../../src/vanilj-core.js","../../src/html-template.js","../../src/index.js"],"sourcesContent":["// vanilj-core.js\r\n\r\n// ==== Plugin System ====\r\n\r\nconst plugins = [];\r\n\r\nexport function useVaniljPlugin(fn) {\r\n  plugins.push(fn);\r\n}\r\n\r\nfunction notifyPlugins(event, data) {\r\n  for (const p of plugins) p(event, data);\r\n}\r\n\r\n// ==== Scoped Effect Cleanup Context ====\r\n\r\nlet scopedCleanupStack = [];\r\n\r\nexport function runWithScopedEffects(fn) {\r\n  const cleanupFns = [];\r\n  scopedCleanupStack.push(cleanupFns);\r\n  try {\r\n    return fn();\r\n  } finally {\r\n    const toCleanup = scopedCleanupStack.pop();\r\n    toCleanup.forEach(fn => fn());\r\n  }\r\n}\r\n\r\nexport function registerScopedEffectCleanup(fn) {\r\n  const stack = scopedCleanupStack[scopedCleanupStack.length - 1];\r\n  if (stack) stack.push(fn);\r\n}\r\n\r\n// ==== Reactivity System ====\r\n\r\nconst effectStack = [];\r\nlet isBatching = false;\r\nconst pendingEffects = new Set();\r\nlet currentCleanupStack = null;\r\n\r\nexport function signal(initialValue) {\r\n  let value = initialValue;\r\n  const subscribers = new Set();\r\n\r\n  function track() {\r\n    if (effectStack.length) {\r\n      subscribers.add(effectStack[0]);\r\n    }\r\n  }\r\n\r\n  function notify() {\r\n    notifyPlugins(\"signal:update\", { newValue: value });\r\n    for (const fn of subscribers) {\r\n      if (isBatching) pendingEffects.add(fn);\r\n      else fn();\r\n    }\r\n  }\r\n\r\n  const s = {\r\n    get value() {\r\n      track();\r\n      return value;\r\n    },\r\n    set value(newValue) {\r\n      if (newValue !== value) {\r\n        value = newValue;\r\n        notify();\r\n      }\r\n    },\r\n    peek: () => value,\r\n    subscribe: (fn) => {\r\n      subscribers.add(fn);\r\n      return () => subscribers.delete(fn);\r\n    },\r\n    toString: () => `Signal {${value}}`\r\n  };\r\n\r\n  notifyPlugins(\"signal:create\", { signal: s, initialValue });\r\n  return s;\r\n}\r\n\r\nexport function readonly(source) {\r\n  return {\r\n    get value() { return source.value },\r\n    set value(_) {\r\n      throw new Error(\"[Vanilj] Cannot assign to readonly signal.\");\r\n    },\r\n    peek: source.peek,\r\n    subscribe: source.subscribe,\r\n    toString: () => `Readonly {${source.value}}`\r\n  };\r\n}\r\n\r\nexport function computed(fn) {\r\n  const out = signal();\r\n  effect(() => out.value = fn());\r\n  const c = {\r\n    get value() { return out.value },\r\n    peek: () => out.peek(),\r\n    subscribe: out.subscribe,\r\n    toString: () => `Computed {${out.value}}`\r\n  };\r\n  notifyPlugins(\"computed:create\", { computed: c });\r\n  return c;\r\n}\r\n\r\nexport function effect(fn) {\r\n  const cleanupFns = [];\r\n\r\n  const cleanup = () => {\r\n    cleanupFns.forEach(fn => fn());\r\n    cleanupFns.length = 0;\r\n    pendingEffects.delete(run);\r\n  };\r\n\r\n  const run = () => {\r\n    cleanup();\r\n    currentCleanupStack = cleanupFns;\r\n    effectStack.unshift(run);\r\n    try {\r\n      notifyPlugins(\"effect:run\", { fn });\r\n      fn(cb => cleanupFns.push(cb)); // ⬅️ passes internal cleanup hook\r\n    } finally {\r\n      effectStack.shift();\r\n      currentCleanupStack = null;\r\n    }\r\n  };\r\n\r\n  run();\r\n  registerScopedEffectCleanup(cleanup);\r\n  return cleanup;\r\n}\r\n\r\nexport function safeEffect(fn, nodeRef) {\r\n  const run = () => {\r\n    if (!nodeRef.current?.isConnected) return;\r\n    fn();\r\n  };\r\n  return effect(run);\r\n}\r\n\r\nexport function onCleanup(fn) {\r\n  if (currentCleanupStack) currentCleanupStack.push(fn);\r\n}\r\n\r\nexport function batch(fn) {\r\n  isBatching = true;\r\n  try {\r\n    fn();\r\n  } finally {\r\n    isBatching = false;\r\n    const toRun = [...pendingEffects];\r\n    pendingEffects.clear();\r\n    toRun.forEach(fn => fn());\r\n  }\r\n}\r\n\r\n// ==== DOM System ====\r\n\r\nconst svgTags = new Set([\r\n  \"svg\", \"path\", \"circle\", \"rect\", \"line\", \"g\", \"text\", \"polygon\", \"polyline\", \"ellipse\", \"use\", \"defs\", \"marker\", \"clipPath\", \"mask\"\r\n]);\r\n\r\nexport function isSignal(x) {\r\n  return typeof x === \"object\" && x !== null && \"value\" in x && typeof x.subscribe === \"function\";\r\n}\r\n\r\nfunction deepFlatten(arr) {\r\n  return arr.flatMap(x => Array.isArray(x) ? deepFlatten(x) : x);\r\n}\r\n\r\nexport function wrap(child) {\r\n  // Node → return as-is\r\n  if (child instanceof Node) return child\r\n\r\n  // Signal/computed → unwrap\r\n  if (isSignal(child)) return wrap(child.value)\r\n\r\n  // Function → create effect scope\r\n  if (typeof child === 'function') {\r\n    const anchor = document.createComment('wrap')\r\n    let lastNodes = []\r\n\r\n    effect(() => {\r\n      const value = child()\r\n      const resolved = wrap(value)\r\n      const nodes = Array.isArray(resolved) ? resolved : [resolved]\r\n\r\n      // Replace previous DOM\r\n      for (const n of lastNodes) {\r\n        if (n.parentNode) n.parentNode.removeChild(n)\r\n      }\r\n\r\n      for (const n of nodes) {\r\n        anchor.parentNode?.insertBefore(n, anchor)\r\n      }\r\n\r\n      lastNodes = nodes\r\n    })\r\n\r\n    return anchor\r\n  }\r\n\r\n  // Array → recursively wrap\r\n  if (Array.isArray(child)) {\r\n    const frag = document.createDocumentFragment()\r\n    for (const c of child) {\r\n      const w = wrap(c)\r\n      if (Array.isArray(w)) w.forEach(n => frag.appendChild(n))\r\n      else if (w) frag.appendChild(w)\r\n    }\r\n    return frag\r\n  }\r\n\r\n  // Fallback: text node\r\n  return document.createTextNode(child?.toString?.() ?? '')\r\n}\r\n\r\nexport function createElement(tag, props, ...children) {\r\n  const isSVG = svgTags.has(tag);\r\n  const el = isSVG\r\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n    : document.createElement(tag);\r\n\r\n  for (const [key, val] of Object.entries(props || {})) {\r\n    if (key === \"ref\" && typeof val === \"function\") {\r\n      val(el);\r\n    } else if (key.startsWith(\"on\") && typeof val === \"function\") {\r\n      el[key.toLowerCase()] = val;\r\n    } else if (typeof val === \"function\") {\r\n      // ✅ NEW: Automatically reactive attribute function\r\n      effect(() => {\r\n        if (!el.isConnected) return;\r\n        const result = val();\r\n        if (typeof result === \"boolean\") {\r\n          if (result) el.setAttribute(key, \"\");\r\n          else el.removeAttribute(key);\r\n        } else {\r\n          el.setAttribute(key, result);\r\n        }\r\n      });\r\n    } else if (key === \"value\" && isSignal(val)) {\r\n      effect(() => {\r\n        if (el.isConnected) el.value = val.value;\r\n      });\r\n    } else if (isSignal(val)) {\r\n      effect(() => {\r\n        if (el.isConnected) el.setAttribute(key, val.value);\r\n      });\r\n    } else if (key === \"value\") {\r\n      el.value = val;\r\n    } else {\r\n      el.setAttribute(key, val);\r\n    }\r\n  }\r\n\r\n  for (const child of deepFlatten(children)) {\r\n    const node = wrap(child);\r\n    if (Array.isArray(node)) node.forEach(n => el.appendChild(n));\r\n    else if (node != null) el.appendChild(node);\r\n  }\r\n\r\n  return el;\r\n}\r\n\r\nexport const tags = new Proxy({}, {\r\n  get: (_, tag) => createElement.bind(null, tag)\r\n});\r\n\r\n// ==== Mount / Unmount ====\r\n\r\nexport function mount(target, node) {\r\n  target.appendChild(node);\r\n}\r\n\r\nexport function unmount(node) {\r\n  if (node && node.parentNode) {\r\n    node.parentNode.removeChild(node);\r\n  }\r\n}\r\n\r\n// ==== Hydration ====\r\n\r\nexport function hydrate(existingNode, viewFn) {\r\n  const rendered = viewFn();\r\n  if (existingNode && rendered !== existingNode) {\r\n    existingNode.replaceWith(rendered);\r\n  }\r\n  return rendered;\r\n}\r\n\r\n// ==== Refs ====\r\n\r\nexport function ref(initialValue = null) {\r\n  return { current: initialValue };\r\n}\r\n\r\n// ==== Utilities ====\r\n\r\nexport function generateUUID() {\r\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\r\n    try {\r\n      return crypto.randomUUID();\r\n    } catch (err) {\r\n      console.warn('crypto.randomUUID failed, using fallback:', err);\r\n    }\r\n  }\r\n\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    const r = Math.random() * 16 | 0;\r\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function generateShortUUID() {\r\n  return generateUUID().slice(0, 8);\r\n}\r\n","// framework/vanilj/html-template.js\r\n\r\nimport { wrap, isSignal, effect } from './vanilj-core.js'\r\n\r\nexport function html(strings, ...values) {\r\n  const template = document.createElement('template')\r\n\r\n  // 1. Inject placeholders\r\n  let markup = ''\r\n  for (let i = 0; i < strings.length; i++) {\r\n    markup += strings[i]\r\n    if (i < values.length) {\r\n      markup += `<!--::${i}::-->`\r\n    }\r\n  }\r\n\r\n  // 2. ROBUST FIX: Pre-process markup to handle attribute spreading properly\r\n  // Replace problematic patterns where comment placeholders appear as attribute names\r\n  markup = markup.replace(/(\\s+)<!--::(\\d+)::-->\\s*>/g, (match, whitespace, index) => {\r\n    // This handles cases like: <div ${props}> where the comment becomes an attribute name\r\n    // We'll move the placeholder to be a child instead\r\n    return `${whitespace}data-vanilj-props=\"${index}\"><!--::${index}::-->`\r\n  })\r\n\r\n  template.innerHTML = markup.trim()\r\n  const content = template.content.cloneNode(true)\r\n\r\n  // 3. Handle special data-vanilj-props attributes (our fix for attribute spreading)\r\n  const elementsWithProps = content.querySelectorAll('[data-vanilj-props]')\r\n  elementsWithProps.forEach(el => {\r\n    const propsIndex = el.getAttribute('data-vanilj-props')\r\n    const value = values[Number(propsIndex)]\r\n    \r\n    if (value && typeof value === 'object') {\r\n      // Apply the props object to the element\r\n      for (const [key, val] of Object.entries(value)) {\r\n        bindAttribute(el, key, val)\r\n      }\r\n    }\r\n    \r\n    // Remove the temporary attribute\r\n    el.removeAttribute('data-vanilj-props')\r\n    \r\n    // Remove the corresponding comment placeholder\r\n    const walker = document.createTreeWalker(el, NodeFilter.SHOW_COMMENT)\r\n    while (walker.nextNode()) {\r\n      const node = walker.currentNode\r\n      if (node.nodeValue === `::${propsIndex}::`) {\r\n        node.parentNode.removeChild(node)\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  // 4. Replace comment placeholders with reactive DOM children\r\n  const walker = document.createTreeWalker(content, NodeFilter.SHOW_COMMENT)\r\n  const placeholderNodes = []\r\n  \r\n  while (walker.nextNode()) {\r\n    const node = walker.currentNode\r\n    const match = node.nodeValue?.match(/^::(\\d+)::$/)\r\n    if (match) {\r\n      placeholderNodes.push({\r\n        node,\r\n        index: Number(match[1]),\r\n        parent: node.parentNode\r\n      })\r\n    }\r\n  }\r\n  \r\n  // Now process all placeholders\r\n  placeholderNodes.forEach(({ node, index, parent }) => {\r\n    const value = values[index]\r\n\r\n    if (typeof value === 'function' || isSignal(value)) {\r\n      const start = document.createComment(`v-start:${index}`)\r\n      const end = document.createComment(`v-end:${index}`)\r\n      parent.insertBefore(start, node)\r\n      parent.insertBefore(end, node)\r\n\r\n      effect(() => {\r\n        let cur = start.nextSibling\r\n        while (cur && cur !== end) {\r\n          const next = cur.nextSibling\r\n          cur.remove()\r\n          cur = next\r\n        }\r\n\r\n        const resolved = wrap(typeof value === 'function' ? value() : value.value)\r\n        if (Array.isArray(resolved)) {\r\n          resolved.forEach(n => end.before(n))\r\n        } else if (resolved instanceof Node) {\r\n          end.before(resolved)\r\n        } else if (resolved != null) {\r\n          end.before(document.createTextNode(String(resolved)))\r\n        }\r\n      })\r\n    } else {\r\n      const resolved = wrap(value)\r\n      if (Array.isArray(resolved)) {\r\n        resolved.forEach(n => parent.insertBefore(n, node))\r\n      } else if (resolved instanceof Node) {\r\n        parent.insertBefore(resolved, node)\r\n      } else if (resolved != null) {\r\n        parent.insertBefore(document.createTextNode(String(resolved)), node)\r\n      }\r\n    }\r\n\r\n    parent.removeChild(node)\r\n  })\r\n\r\n  // 5. Replace attribute placeholders\r\n  const elements = content.querySelectorAll('*');\r\n  const placeholderRegex = /<!--::(\\d+)::--/; // For matching (note: no closing > due to browser parsing)\r\n  const placeholderSplitRegex = /(<!--::\\d+::-->)/; // For splitting\r\n\r\n  elements.forEach(el => {\r\n    for (const attr of [...el.attributes]) {\r\n      // Case 1: Check if the attribute NAME is a placeholder (for prop spreads like ${props})\r\n      // The browser parses <!--::2::--> as <!--::2::-- (truncates at >)\r\n      const spreadMatch = attr.name.match(placeholderRegex);\r\n      if (spreadMatch) {\r\n        const i = Number(spreadMatch[1]);\r\n        const value = values[i];\r\n        // The value here should be an object of attributes\r\n        const entries = typeof value === 'function' ? value() : value;\r\n\r\n        if (entries && typeof entries === 'object') {\r\n          for (const [k, v] of Object.entries(entries)) {\r\n            bindAttribute(el, k, v);\r\n          }\r\n        }\r\n        el.removeAttribute(attr.name); // Remove the placeholder attribute\r\n        continue; // Move to the next attribute on the element\r\n      }\r\n\r\n      // Case 2: Check if the attribute VALUE contains a placeholder\r\n      if (!attr.value.includes('<!--::')) {\r\n        continue; // No placeholders in this attribute's value, skip it\r\n      }\r\n\r\n      const raw = attr.value;\r\n      const parts = raw.split(placeholderSplitRegex).filter(part => part !== '');\r\n\r\n      const dynamicParts = parts.map(part => {\r\n        const match = part.match(placeholderRegex);\r\n        if (match) {\r\n          const i = Number(match[1]);\r\n          return values[i];\r\n        }\r\n        return part;\r\n      });\r\n\r\n      el.removeAttribute(attr.name);\r\n\r\n      // ✅ FIX: Prevent calling event handler functions\r\n      // Check if this is an event handler with a single function\r\n      const isSingleFunction = dynamicParts.length === 1 && typeof dynamicParts[0] === 'function';\r\n      const isEventHandler = attr.name.startsWith('on');\r\n      \r\n      if (isEventHandler && isSingleFunction) {\r\n        bindAttribute(el, attr.name, dynamicParts[0]);\r\n        continue;\r\n      }\r\n\r\n      // Optimize: static or single dynamic (non-event handlers)\r\n      if (dynamicParts.length === 1 && !isEventHandler) {\r\n        bindAttribute(el, attr.name, dynamicParts[0]);\r\n        continue;\r\n      }\r\n      \r\n      // For event handlers that aren't single functions, avoid reactive effects\r\n      if (isEventHandler) {\r\n        // Just bind the first dynamic part directly for event handlers\r\n        bindAttribute(el, attr.name, dynamicParts[0]);\r\n        continue;\r\n      }\r\n\r\n      // Reactive merged string\r\n      effect(() => {\r\n        const result = dynamicParts.map(p =>\r\n          typeof p === 'function' ? p() :\r\n          isSignal(p) ? p.value :\r\n          p\r\n        ).join('');\r\n        bindAttribute(el, attr.name, result);\r\n      });\r\n    }\r\n  });\r\n\r\n  return content\r\n}\r\n\r\n// === Attribute Binding Logic ===\r\nfunction bindAttribute(el, name, value) {\r\n  if (name.startsWith('on') && typeof value === 'function') {\r\n    el[name.toLowerCase()] = value\r\n    return\r\n  }\r\n\r\n  const isDOMProp = name in el\r\n\r\n  const apply = v => {\r\n    if (typeof v === 'boolean') {\r\n      if (isDOMProp) el[name] = v\r\n      else v ? el.setAttribute(name, '') : el.removeAttribute(name)\r\n    } else {\r\n      if (isDOMProp) el[name] = v\r\n      else el.setAttribute(name, v)\r\n    }\r\n  }\r\n\r\n  if (isSignal(value)) {\r\n    effect(() => apply(value.value))\r\n  } else if (typeof value === 'function') {\r\n    effect(() => apply(value()))\r\n  } else {\r\n    apply(value)\r\n  }\r\n}\r\n\r\n/**\r\n * VanilJ HTML Template Engine (Fixed)\r\n * ------------------------------------\r\n * ✅ Robust handling of attribute spreading\r\n * ✅ Pre-processes markup to avoid browser parsing issues\r\n * ✅ Maintains full reactivity support\r\n * ✅ Supports:\r\n *    - Reactive children via ${signal} or ${() => ...}\r\n *    - Object spread for attributes: ${props}\r\n *    - Static + dynamic string merge: class=\"a ${b} c\"\r\n *    - Safe event handler binding: oninput=\"${fn}\"\r\n *\r\n * 🧠 Fix Strategy:\r\n *    - Detects problematic ${props}> patterns\r\n *    - Converts them to data-vanilj-props attributes\r\n *    - Processes props objects before browser parsing\r\n *    - Maintains compatibility with existing components\r\n */\r\n","// packages/vanilj-core/src/index.js - Core framework entry point\r\n\r\n// Import everything from vanilj-core\r\nimport {\r\n  useVaniljPlugin,\r\n  runWithScopedEffects,\r\n  registerScopedEffectCleanup,\r\n  signal,\r\n  readonly,\r\n  computed,\r\n  effect,\r\n  safeEffect,\r\n  onCleanup,\r\n  batch,\r\n  isSignal,\r\n  wrap,\r\n  createElement,\r\n  tags,\r\n  mount,\r\n  unmount,\r\n  hydrate,\r\n  ref,\r\n  generateUUID,\r\n  generateShortUUID\r\n} from './vanilj-core.js';\r\n\r\n// Import HTML template system\r\nimport { html } from './html-template.js';\r\n\r\n// Re-export everything as named exports\r\nexport {\r\n  // Plugin system\r\n  useVaniljPlugin,\r\n  \r\n  // Scoped effects\r\n  runWithScopedEffects,\r\n  registerScopedEffectCleanup,\r\n  \r\n  // Reactivity system\r\n  signal,\r\n  readonly,\r\n  computed,\r\n  effect,\r\n  safeEffect,\r\n  onCleanup,\r\n  batch,\r\n  \r\n  // DOM system\r\n  isSignal,\r\n  wrap,\r\n  createElement,\r\n  tags,\r\n  \r\n  // Mount/unmount\r\n  mount,\r\n  unmount,\r\n  hydrate,\r\n  \r\n  // Refs\r\n  ref,\r\n  \r\n  // Utilities\r\n  generateUUID,\r\n  generateShortUUID,\r\n  \r\n  // HTML template system\r\n  html\r\n};\r\n\r\n// Default export - core vanilj object\r\nconst VaniljCore = {\r\n  // Core reactivity\r\n  signal,\r\n  readonly,\r\n  computed,\r\n  effect,\r\n  batch,\r\n  \r\n  // DOM\r\n  createElement,\r\n  tags,\r\n  mount,\r\n  unmount,\r\n  \r\n  // Template\r\n  html,\r\n  \r\n  // Utilities\r\n  ref,\r\n  generateUUID,\r\n  generateShortUUID\r\n};\r\n\r\nexport default VaniljCore;"],"names":["fn","_a","walker"],"mappings":"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"}