{"version":3,"file":"vanilj-plugin-i18n.min.umd.js","sources":["../src/index.js","../src/i18n.js"],"sourcesContent":["// packages/plugin-i18n/src/index.js - i18n plugin entry point\r\n\r\n// Export the i18n functionality\r\nexport { initI18n } from './i18n.js';\r\n\r\n// Auto-register notification when loaded via script tag\r\nif (typeof window !== 'undefined' && window.VaniljCore) {\r\n  console.log('Vanilj i18n plugin loaded');\r\n}","// /plugins/i18n.js\r\n\r\nimport { effect } from \"@vanilj/core\"\r\n\r\n/**\r\n * Initializes i18n bindings for the DOM.\r\n * - Binds all `[data-i18n-key]` elements to update textContent.\r\n * - Binds all `[data-i18n-attr]` elements to update attribute values.\r\n * - Optionally supports `[data-i18n-html]` for innerHTML.\r\n *\r\n * @param {Element} root - Root node to bind (usually shadowRoot or document).\r\n * @param {object} i18nService - Must have .t(key) and .lang signal.\r\n */\r\nexport function initI18n(root, i18nService) {\r\n  if (!root || !i18nService || typeof i18nService.t !== \"function\") return\r\n\r\n  // Text nodes\r\n  const textNodes = root.querySelectorAll(\"[data-i18n-key]\")\r\n  textNodes.forEach(el => {\r\n    const key = el.getAttribute(\"data-i18n-key\")\r\n    if (!key || el.__i18nBound) return\r\n    el.__i18nBound = true\r\n\r\n    effect(() => {\r\n      const translation = i18nService.t(key)\r\n      if (translation === undefined) {\r\n        console.warn(`[i18n] Missing key: \"${key}\"`)\r\n        return\r\n      }\r\n      el.textContent = translation\r\n    })\r\n  })\r\n\r\n  // Attribute bindings\r\n  const attrNodes = root.querySelectorAll(\"[data-i18n-attr]\")\r\n  attrNodes.forEach(el => {\r\n    const attrMap = el.getAttribute(\"data-i18n-attr\")\r\n    if (!attrMap || el.__i18nAttrBound) return\r\n    el.__i18nAttrBound = true\r\n\r\n    attrMap.split(\",\").forEach(mapping => {\r\n      const [attr, key] = mapping.split(\":\").map(s => s.trim())\r\n      if (!attr || !key) return\r\n\r\n      effect(() => {\r\n        const translation = i18nService.t(key)\r\n        if (translation === undefined) {\r\n          console.warn(`[i18n] Missing key: \"${key}\"`)\r\n          return\r\n        }\r\n        el.setAttribute(attr, translation)\r\n      })\r\n    })\r\n  })\r\n\r\n  // Optional: innerHTML bindings\r\n  const htmlNodes = root.querySelectorAll(\"[data-i18n-html]\")\r\n  htmlNodes.forEach(el => {\r\n    const key = el.getAttribute(\"data-i18n-html\")\r\n    if (!key || el.__i18nHtmlBound) return\r\n    el.__i18nHtmlBound = true\r\n\r\n    effect(() => {\r\n      const translation = i18nService.t(key)\r\n      if (translation === undefined) {\r\n        console.warn(`[i18n] Missing key: \"${key}\"`)\r\n        return\r\n      }\r\n      el.innerHTML = translation\r\n    })\r\n  })\r\n}\r\n"],"names":["window","VaniljCore","console","log","root","i18nService","t","querySelectorAll","forEach","el","key","getAttribute","__i18nBound","effect","translation","textContent","warn","attrMap","__i18nAttrBound","split","mapping","attr","map","s","trim","setAttribute","__i18nHtmlBound","innerHTML"],"mappings":"6SAMsB,oBAAXA,QAA0BA,OAAOC,YAC1CC,QAAQC,IAAI,wCCMP,SAAkBC,EAAMC,GAC7B,IAAKD,IAASC,GAAwC,mBAAlBA,EAAYC,EAAkB,OAGhDF,EAAKG,iBAAiB,mBAC9BC,QAAQC,IAChB,MAAMC,EAAMD,EAAGE,aAAa,iBACvBD,IAAOD,EAAGG,cACfH,EAAGG,aAAc,EAEjBC,EAAAA,OAAO,KACL,MAAMC,EAAcT,EAAYC,EAAEI,QACd,IAAhBI,EAIJL,EAAGM,YAAcD,EAHfZ,QAAQc,KAAK,wBAAwBN,WAQzBN,EAAKG,iBAAiB,oBAC9BC,QAAQC,IAChB,MAAMQ,EAAUR,EAAGE,aAAa,kBAC3BM,IAAWR,EAAGS,kBACnBT,EAAGS,iBAAkB,EAErBD,EAAQE,MAAM,KAAKX,QAAQY,IACzB,MAAOC,EAAMX,GAAOU,EAAQD,MAAM,KAAKG,IAAIC,GAAKA,EAAEC,QAC7CH,GAASX,GAEdG,EAAAA,OAAO,KACL,MAAMC,EAAcT,EAAYC,EAAEI,QACd,IAAhBI,EAIJL,EAAGgB,aAAaJ,EAAMP,GAHpBZ,QAAQc,KAAK,wBAAwBN,aAS3BN,EAAKG,iBAAiB,oBAC9BC,QAAQC,IAChB,MAAMC,EAAMD,EAAGE,aAAa,kBACvBD,IAAOD,EAAGiB,kBACfjB,EAAGiB,iBAAkB,EAErBb,EAAAA,OAAO,KACL,MAAMC,EAAcT,EAAYC,EAAEI,QACd,IAAhBI,EAIJL,EAAGkB,UAAYb,EAHbZ,QAAQc,KAAK,wBAAwBN,UAM7C"}