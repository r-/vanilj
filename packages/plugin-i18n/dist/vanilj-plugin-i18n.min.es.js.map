{"version":3,"file":"vanilj-plugin-i18n.min.es.js","sources":["../src/i18n.js","../src/index.js"],"sourcesContent":["// /plugins/i18n.js\r\n\r\nimport { effect } from \"@vanilj/core\"\r\n\r\n/**\r\n * Initializes i18n bindings for the DOM.\r\n * - Binds all `[data-i18n-key]` elements to update textContent.\r\n * - Binds all `[data-i18n-attr]` elements to update attribute values.\r\n * - Optionally supports `[data-i18n-html]` for innerHTML.\r\n *\r\n * @param {Element} root - Root node to bind (usually shadowRoot or document).\r\n * @param {object} i18nService - Must have .t(key) and .lang signal.\r\n */\r\nexport function initI18n(root, i18nService) {\r\n  if (!root || !i18nService || typeof i18nService.t !== \"function\") return\r\n\r\n  // Text nodes\r\n  const textNodes = root.querySelectorAll(\"[data-i18n-key]\")\r\n  textNodes.forEach(el => {\r\n    const key = el.getAttribute(\"data-i18n-key\")\r\n    if (!key || el.__i18nBound) return\r\n    el.__i18nBound = true\r\n\r\n    effect(() => {\r\n      const translation = i18nService.t(key)\r\n      if (translation === undefined) {\r\n        console.warn(`[i18n] Missing key: \"${key}\"`)\r\n        return\r\n      }\r\n      el.textContent = translation\r\n    })\r\n  })\r\n\r\n  // Attribute bindings\r\n  const attrNodes = root.querySelectorAll(\"[data-i18n-attr]\")\r\n  attrNodes.forEach(el => {\r\n    const attrMap = el.getAttribute(\"data-i18n-attr\")\r\n    if (!attrMap || el.__i18nAttrBound) return\r\n    el.__i18nAttrBound = true\r\n\r\n    attrMap.split(\",\").forEach(mapping => {\r\n      const [attr, key] = mapping.split(\":\").map(s => s.trim())\r\n      if (!attr || !key) return\r\n\r\n      effect(() => {\r\n        const translation = i18nService.t(key)\r\n        if (translation === undefined) {\r\n          console.warn(`[i18n] Missing key: \"${key}\"`)\r\n          return\r\n        }\r\n        el.setAttribute(attr, translation)\r\n      })\r\n    })\r\n  })\r\n\r\n  // Optional: innerHTML bindings\r\n  const htmlNodes = root.querySelectorAll(\"[data-i18n-html]\")\r\n  htmlNodes.forEach(el => {\r\n    const key = el.getAttribute(\"data-i18n-html\")\r\n    if (!key || el.__i18nHtmlBound) return\r\n    el.__i18nHtmlBound = true\r\n\r\n    effect(() => {\r\n      const translation = i18nService.t(key)\r\n      if (translation === undefined) {\r\n        console.warn(`[i18n] Missing key: \"${key}\"`)\r\n        return\r\n      }\r\n      el.innerHTML = translation\r\n    })\r\n  })\r\n}\r\n","// packages/plugin-i18n/src/index.js - i18n plugin entry point\r\n\r\n// Export the i18n functionality\r\nexport { initI18n } from './i18n.js';\r\n\r\n// Auto-register notification when loaded via script tag\r\nif (typeof window !== 'undefined' && window.VaniljCore) {\r\n  console.log('Vanilj i18n plugin loaded');\r\n}"],"names":[],"mappings":";AAaO,SAAS,SAAS,MAAM,aAAa;AAC1C,MAAI,CAAC,QAAQ,CAAC,eAAe,OAAO,YAAY,MAAM,WAAY;AAGlE,QAAM,YAAY,KAAK,iBAAiB,iBAAiB;AACzD,YAAU,QAAQ,QAAM;AACtB,UAAM,MAAM,GAAG,aAAa,eAAe;AAC3C,QAAI,CAAC,OAAO,GAAG,YAAa;AAC5B,OAAG,cAAc;AAEjB,WAAO,MAAM;AACX,YAAM,cAAc,YAAY,EAAE,GAAG;AACrC,UAAI,gBAAgB,QAAW;AAC7B,gBAAQ,KAAK,wBAAwB,GAAG,GAAG;AAC3C;AAAA,MACF;AACA,SAAG,cAAc;AAAA,IACnB,CAAC;AAAA,EACH,CAAC;AAGD,QAAM,YAAY,KAAK,iBAAiB,kBAAkB;AAC1D,YAAU,QAAQ,QAAM;AACtB,UAAM,UAAU,GAAG,aAAa,gBAAgB;AAChD,QAAI,CAAC,WAAW,GAAG,gBAAiB;AACpC,OAAG,kBAAkB;AAErB,YAAQ,MAAM,GAAG,EAAE,QAAQ,aAAW;AACpC,YAAM,CAAC,MAAM,GAAG,IAAI,QAAQ,MAAM,GAAG,EAAE,IAAI,OAAK,EAAE,KAAI,CAAE;AACxD,UAAI,CAAC,QAAQ,CAAC,IAAK;AAEnB,aAAO,MAAM;AACX,cAAM,cAAc,YAAY,EAAE,GAAG;AACrC,YAAI,gBAAgB,QAAW;AAC7B,kBAAQ,KAAK,wBAAwB,GAAG,GAAG;AAC3C;AAAA,QACF;AACA,WAAG,aAAa,MAAM,WAAW;AAAA,MACnC,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AAGD,QAAM,YAAY,KAAK,iBAAiB,kBAAkB;AAC1D,YAAU,QAAQ,QAAM;AACtB,UAAM,MAAM,GAAG,aAAa,gBAAgB;AAC5C,QAAI,CAAC,OAAO,GAAG,gBAAiB;AAChC,OAAG,kBAAkB;AAErB,WAAO,MAAM;AACX,YAAM,cAAc,YAAY,EAAE,GAAG;AACrC,UAAI,gBAAgB,QAAW;AAC7B,gBAAQ,KAAK,wBAAwB,GAAG,GAAG;AAC3C;AAAA,MACF;AACA,SAAG,YAAY;AAAA,IACjB,CAAC;AAAA,EACH,CAAC;AACH;ACjEA,IAAI,OAAO,WAAW,eAAe,OAAO,YAAY;AACtD,UAAQ,IAAI,2BAA2B;AACzC;"}