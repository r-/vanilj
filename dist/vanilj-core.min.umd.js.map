{"version":3,"file":"vanilj-core.umd.js","sources":["../../src/vanilj-core.js","../../src/html-template.js","../../src/index.js"],"sourcesContent":["// vanilj-core.js\r\n\r\n// ==== Plugin System ====\r\n\r\nconst plugins = [];\r\n\r\nexport function useVaniljPlugin(fn) {\r\n  plugins.push(fn);\r\n}\r\n\r\nfunction notifyPlugins(event, data) {\r\n  for (const p of plugins) p(event, data);\r\n}\r\n\r\n// ==== Scoped Effect Cleanup Context ====\r\n\r\nlet scopedCleanupStack = [];\r\n\r\nexport function runWithScopedEffects(fn) {\r\n  const cleanupFns = [];\r\n  scopedCleanupStack.push(cleanupFns);\r\n  try {\r\n    return fn();\r\n  } finally {\r\n    const toCleanup = scopedCleanupStack.pop();\r\n    toCleanup.forEach(fn => fn());\r\n  }\r\n}\r\n\r\nexport function registerScopedEffectCleanup(fn) {\r\n  const stack = scopedCleanupStack[scopedCleanupStack.length - 1];\r\n  if (stack) stack.push(fn);\r\n}\r\n\r\n// ==== Reactivity System ====\r\n\r\nconst effectStack = [];\r\nlet isBatching = false;\r\nconst pendingEffects = new Set();\r\nlet currentCleanupStack = null;\r\n\r\nexport function signal(initialValue) {\r\n  let value = initialValue;\r\n  const subscribers = new Set();\r\n\r\n  function track() {\r\n    if (effectStack.length) {\r\n      subscribers.add(effectStack[0]);\r\n    }\r\n  }\r\n\r\n  function notify() {\r\n    notifyPlugins(\"signal:update\", { newValue: value });\r\n    for (const fn of subscribers) {\r\n      if (isBatching) pendingEffects.add(fn);\r\n      else fn();\r\n    }\r\n  }\r\n\r\n  const s = {\r\n    get value() {\r\n      track();\r\n      return value;\r\n    },\r\n    set value(newValue) {\r\n      if (newValue !== value) {\r\n        value = newValue;\r\n        notify();\r\n      }\r\n    },\r\n    peek: () => value,\r\n    subscribe: (fn) => {\r\n      subscribers.add(fn);\r\n      return () => subscribers.delete(fn);\r\n    },\r\n    toString: () => `Signal {${value}}`\r\n  };\r\n\r\n  notifyPlugins(\"signal:create\", { signal: s, initialValue });\r\n  return s;\r\n}\r\n\r\nexport function readonly(source) {\r\n  return {\r\n    get value() { return source.value },\r\n    set value(_) {\r\n      throw new Error(\"[Vanilj] Cannot assign to readonly signal.\");\r\n    },\r\n    peek: source.peek,\r\n    subscribe: source.subscribe,\r\n    toString: () => `Readonly {${source.value}}`\r\n  };\r\n}\r\n\r\nexport function computed(fn) {\r\n  const out = signal();\r\n  effect(() => out.value = fn());\r\n  const c = {\r\n    get value() { return out.value },\r\n    peek: () => out.peek(),\r\n    subscribe: out.subscribe,\r\n    toString: () => `Computed {${out.value}}`\r\n  };\r\n  notifyPlugins(\"computed:create\", { computed: c });\r\n  return c;\r\n}\r\n\r\nexport function effect(fn) {\r\n  const cleanupFns = [];\r\n\r\n  const cleanup = () => {\r\n    cleanupFns.forEach(fn => fn());\r\n    cleanupFns.length = 0;\r\n    pendingEffects.delete(run);\r\n  };\r\n\r\n  const run = () => {\r\n    cleanup();\r\n    currentCleanupStack = cleanupFns;\r\n    effectStack.unshift(run);\r\n    try {\r\n      notifyPlugins(\"effect:run\", { fn });\r\n      fn(cb => cleanupFns.push(cb)); // ⬅️ passes internal cleanup hook\r\n    } finally {\r\n      effectStack.shift();\r\n      currentCleanupStack = null;\r\n    }\r\n  };\r\n\r\n  run();\r\n  registerScopedEffectCleanup(cleanup);\r\n  return cleanup;\r\n}\r\n\r\nexport function safeEffect(fn, nodeRef) {\r\n  const run = () => {\r\n    if (!nodeRef.current?.isConnected) return;\r\n    fn();\r\n  };\r\n  return effect(run);\r\n}\r\n\r\nexport function onCleanup(fn) {\r\n  if (currentCleanupStack) currentCleanupStack.push(fn);\r\n}\r\n\r\nexport function batch(fn) {\r\n  isBatching = true;\r\n  try {\r\n    fn();\r\n  } finally {\r\n    isBatching = false;\r\n    const toRun = [...pendingEffects];\r\n    pendingEffects.clear();\r\n    toRun.forEach(fn => fn());\r\n  }\r\n}\r\n\r\n// ==== DOM System ====\r\n\r\nconst svgTags = new Set([\r\n  \"svg\", \"path\", \"circle\", \"rect\", \"line\", \"g\", \"text\", \"polygon\", \"polyline\", \"ellipse\", \"use\", \"defs\", \"marker\", \"clipPath\", \"mask\"\r\n]);\r\n\r\nexport function isSignal(x) {\r\n  return typeof x === \"object\" && x !== null && \"value\" in x && typeof x.subscribe === \"function\";\r\n}\r\n\r\nfunction deepFlatten(arr) {\r\n  return arr.flatMap(x => Array.isArray(x) ? deepFlatten(x) : x);\r\n}\r\n\r\nexport function wrap(child) {\r\n  // Node → return as-is\r\n  if (child instanceof Node) return child\r\n\r\n  // Signal/computed → unwrap\r\n  if (isSignal(child)) return wrap(child.value)\r\n\r\n  // Function → create effect scope\r\n  if (typeof child === 'function') {\r\n    const anchor = document.createComment('wrap')\r\n    let lastNodes = []\r\n\r\n    effect(() => {\r\n      const value = child()\r\n      const resolved = wrap(value)\r\n      const nodes = Array.isArray(resolved) ? resolved : [resolved]\r\n\r\n      // Replace previous DOM\r\n      for (const n of lastNodes) {\r\n        if (n.parentNode) n.parentNode.removeChild(n)\r\n      }\r\n\r\n      for (const n of nodes) {\r\n        anchor.parentNode?.insertBefore(n, anchor)\r\n      }\r\n\r\n      lastNodes = nodes\r\n    })\r\n\r\n    return anchor\r\n  }\r\n\r\n  // Array → recursively wrap\r\n  if (Array.isArray(child)) {\r\n    const frag = document.createDocumentFragment()\r\n    for (const c of child) {\r\n      const w = wrap(c)\r\n      if (Array.isArray(w)) w.forEach(n => frag.appendChild(n))\r\n      else if (w) frag.appendChild(w)\r\n    }\r\n    return frag\r\n  }\r\n\r\n  // Fallback: text node\r\n  return document.createTextNode(child?.toString?.() ?? '')\r\n}\r\n\r\nexport function createElement(tag, props, ...children) {\r\n  const isSVG = svgTags.has(tag);\r\n  const el = isSVG\r\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n    : document.createElement(tag);\r\n\r\n  for (const [key, val] of Object.entries(props || {})) {\r\n    if (key === \"ref\" && typeof val === \"function\") {\r\n      val(el);\r\n    } else if (key.startsWith(\"on\") && typeof val === \"function\") {\r\n      el[key.toLowerCase()] = val;\r\n    } else if (typeof val === \"function\") {\r\n      // ✅ NEW: Automatically reactive attribute function\r\n      effect(() => {\r\n        if (!el.isConnected) return;\r\n        const result = val();\r\n        if (typeof result === \"boolean\") {\r\n          if (result) el.setAttribute(key, \"\");\r\n          else el.removeAttribute(key);\r\n        } else {\r\n          el.setAttribute(key, result);\r\n        }\r\n      });\r\n    } else if (key === \"value\" && isSignal(val)) {\r\n      effect(() => {\r\n        if (el.isConnected) el.value = val.value;\r\n      });\r\n    } else if (isSignal(val)) {\r\n      effect(() => {\r\n        if (el.isConnected) el.setAttribute(key, val.value);\r\n      });\r\n    } else if (key === \"value\") {\r\n      el.value = val;\r\n    } else {\r\n      el.setAttribute(key, val);\r\n    }\r\n  }\r\n\r\n  for (const child of deepFlatten(children)) {\r\n    const node = wrap(child);\r\n    if (Array.isArray(node)) node.forEach(n => el.appendChild(n));\r\n    else if (node != null) el.appendChild(node);\r\n  }\r\n\r\n  return el;\r\n}\r\n\r\nexport const tags = new Proxy({}, {\r\n  get: (_, tag) => createElement.bind(null, tag)\r\n});\r\n\r\n// ==== Mount / Unmount ====\r\n\r\nexport function mount(target, node) {\r\n  target.appendChild(node);\r\n}\r\n\r\nexport function unmount(node) {\r\n  if (node && node.parentNode) {\r\n    node.parentNode.removeChild(node);\r\n  }\r\n}\r\n\r\n// ==== Hydration ====\r\n\r\nexport function hydrate(existingNode, viewFn) {\r\n  const rendered = viewFn();\r\n  if (existingNode && rendered !== existingNode) {\r\n    existingNode.replaceWith(rendered);\r\n  }\r\n  return rendered;\r\n}\r\n\r\n// ==== Refs ====\r\n\r\nexport function ref(initialValue = null) {\r\n  return { current: initialValue };\r\n}\r\n\r\n// ==== Utilities ====\r\n\r\nexport function generateUUID() {\r\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\r\n    try {\r\n      return crypto.randomUUID();\r\n    } catch (err) {\r\n      console.warn('crypto.randomUUID failed, using fallback:', err);\r\n    }\r\n  }\r\n\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    const r = Math.random() * 16 | 0;\r\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function generateShortUUID() {\r\n  return generateUUID().slice(0, 8);\r\n}\r\n","// framework/vanilj/html-template.js\r\n\r\nimport { wrap, isSignal, effect } from './vanilj-core.js'\r\n\r\nexport function html(strings, ...values) {\r\n  const template = document.createElement('template')\r\n\r\n  // 1. Inject placeholders\r\n  let markup = ''\r\n  for (let i = 0; i < strings.length; i++) {\r\n    markup += strings[i]\r\n    if (i < values.length) {\r\n      markup += `<!--::${i}::-->`\r\n    }\r\n  }\r\n\r\n  // 2. ROBUST FIX: Pre-process markup to handle attribute spreading properly\r\n  // Replace problematic patterns where comment placeholders appear as attribute names\r\n  markup = markup.replace(/(\\s+)<!--::(\\d+)::-->\\s*>/g, (match, whitespace, index) => {\r\n    // This handles cases like: <div ${props}> where the comment becomes an attribute name\r\n    // We'll move the placeholder to be a child instead\r\n    return `${whitespace}data-vanilj-props=\"${index}\"><!--::${index}::-->`\r\n  })\r\n\r\n  template.innerHTML = markup.trim()\r\n  const content = template.content.cloneNode(true)\r\n\r\n  // 3. Handle special data-vanilj-props attributes (our fix for attribute spreading)\r\n  const elementsWithProps = content.querySelectorAll('[data-vanilj-props]')\r\n  elementsWithProps.forEach(el => {\r\n    const propsIndex = el.getAttribute('data-vanilj-props')\r\n    const value = values[Number(propsIndex)]\r\n    \r\n    if (value && typeof value === 'object') {\r\n      // Apply the props object to the element\r\n      for (const [key, val] of Object.entries(value)) {\r\n        bindAttribute(el, key, val)\r\n      }\r\n    }\r\n    \r\n    // Remove the temporary attribute\r\n    el.removeAttribute('data-vanilj-props')\r\n    \r\n    // Remove the corresponding comment placeholder\r\n    const walker = document.createTreeWalker(el, NodeFilter.SHOW_COMMENT)\r\n    while (walker.nextNode()) {\r\n      const node = walker.currentNode\r\n      if (node.nodeValue === `::${propsIndex}::`) {\r\n        node.parentNode.removeChild(node)\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  // 4. Replace comment placeholders with reactive DOM children\r\n  const walker = document.createTreeWalker(content, NodeFilter.SHOW_COMMENT)\r\n  const placeholderNodes = []\r\n  \r\n  while (walker.nextNode()) {\r\n    const node = walker.currentNode\r\n    const match = node.nodeValue?.match(/^::(\\d+)::$/)\r\n    if (match) {\r\n      placeholderNodes.push({\r\n        node,\r\n        index: Number(match[1]),\r\n        parent: node.parentNode\r\n      })\r\n    }\r\n  }\r\n  \r\n  // Now process all placeholders\r\n  placeholderNodes.forEach(({ node, index, parent }) => {\r\n    const value = values[index]\r\n\r\n    if (typeof value === 'function' || isSignal(value)) {\r\n      const start = document.createComment(`v-start:${index}`)\r\n      const end = document.createComment(`v-end:${index}`)\r\n      parent.insertBefore(start, node)\r\n      parent.insertBefore(end, node)\r\n\r\n      effect(() => {\r\n        let cur = start.nextSibling\r\n        while (cur && cur !== end) {\r\n          const next = cur.nextSibling\r\n          cur.remove()\r\n          cur = next\r\n        }\r\n\r\n        const resolved = wrap(typeof value === 'function' ? value() : value.value)\r\n        if (Array.isArray(resolved)) {\r\n          resolved.forEach(n => end.before(n))\r\n        } else if (resolved instanceof Node) {\r\n          end.before(resolved)\r\n        } else if (resolved != null) {\r\n          end.before(document.createTextNode(String(resolved)))\r\n        }\r\n      })\r\n    } else {\r\n      const resolved = wrap(value)\r\n      if (Array.isArray(resolved)) {\r\n        resolved.forEach(n => parent.insertBefore(n, node))\r\n      } else if (resolved instanceof Node) {\r\n        parent.insertBefore(resolved, node)\r\n      } else if (resolved != null) {\r\n        parent.insertBefore(document.createTextNode(String(resolved)), node)\r\n      }\r\n    }\r\n\r\n    parent.removeChild(node)\r\n  })\r\n\r\n  // 5. Replace attribute placeholders\r\n  const elements = content.querySelectorAll('*');\r\n  const placeholderRegex = /<!--::(\\d+)::--/; // For matching (note: no closing > due to browser parsing)\r\n  const placeholderSplitRegex = /(<!--::\\d+::-->)/; // For splitting\r\n\r\n  elements.forEach(el => {\r\n    for (const attr of [...el.attributes]) {\r\n      // Case 1: Check if the attribute NAME is a placeholder (for prop spreads like ${props})\r\n      // The browser parses <!--::2::--> as <!--::2::-- (truncates at >)\r\n      const spreadMatch = attr.name.match(placeholderRegex);\r\n      if (spreadMatch) {\r\n        const i = Number(spreadMatch[1]);\r\n        const value = values[i];\r\n        // The value here should be an object of attributes\r\n        const entries = typeof value === 'function' ? value() : value;\r\n\r\n        if (entries && typeof entries === 'object') {\r\n          for (const [k, v] of Object.entries(entries)) {\r\n            bindAttribute(el, k, v);\r\n          }\r\n        }\r\n        el.removeAttribute(attr.name); // Remove the placeholder attribute\r\n        continue; // Move to the next attribute on the element\r\n      }\r\n\r\n      // Case 2: Check if the attribute VALUE contains a placeholder\r\n      if (!attr.value.includes('<!--::')) {\r\n        continue; // No placeholders in this attribute's value, skip it\r\n      }\r\n\r\n      const raw = attr.value;\r\n      const parts = raw.split(placeholderSplitRegex).filter(part => part !== '');\r\n\r\n      const dynamicParts = parts.map(part => {\r\n        const match = part.match(placeholderRegex);\r\n        if (match) {\r\n          const i = Number(match[1]);\r\n          return values[i];\r\n        }\r\n        return part;\r\n      });\r\n\r\n      el.removeAttribute(attr.name);\r\n\r\n      // ✅ FIX: Prevent calling event handler functions\r\n      // Check if this is an event handler with a single function\r\n      const isSingleFunction = dynamicParts.length === 1 && typeof dynamicParts[0] === 'function';\r\n      const isEventHandler = attr.name.startsWith('on');\r\n      \r\n      if (isEventHandler && isSingleFunction) {\r\n        bindAttribute(el, attr.name, dynamicParts[0]);\r\n        continue;\r\n      }\r\n\r\n      // Optimize: static or single dynamic (non-event handlers)\r\n      if (dynamicParts.length === 1 && !isEventHandler) {\r\n        bindAttribute(el, attr.name, dynamicParts[0]);\r\n        continue;\r\n      }\r\n      \r\n      // For event handlers that aren't single functions, avoid reactive effects\r\n      if (isEventHandler) {\r\n        // Just bind the first dynamic part directly for event handlers\r\n        bindAttribute(el, attr.name, dynamicParts[0]);\r\n        continue;\r\n      }\r\n\r\n      // Reactive merged string\r\n      effect(() => {\r\n        const result = dynamicParts.map(p =>\r\n          typeof p === 'function' ? p() :\r\n          isSignal(p) ? p.value :\r\n          p\r\n        ).join('');\r\n        bindAttribute(el, attr.name, result);\r\n      });\r\n    }\r\n  });\r\n\r\n  return content\r\n}\r\n\r\n// === Attribute Binding Logic ===\r\nfunction bindAttribute(el, name, value) {\r\n  if (name.startsWith('on') && typeof value === 'function') {\r\n    el[name.toLowerCase()] = value\r\n    return\r\n  }\r\n\r\n  const isDOMProp = name in el\r\n\r\n  const apply = v => {\r\n    if (typeof v === 'boolean') {\r\n      if (isDOMProp) el[name] = v\r\n      else v ? el.setAttribute(name, '') : el.removeAttribute(name)\r\n    } else {\r\n      if (isDOMProp) el[name] = v\r\n      else el.setAttribute(name, v)\r\n    }\r\n  }\r\n\r\n  if (isSignal(value)) {\r\n    effect(() => apply(value.value))\r\n  } else if (typeof value === 'function') {\r\n    effect(() => apply(value()))\r\n  } else {\r\n    apply(value)\r\n  }\r\n}\r\n\r\n/**\r\n * VanilJ HTML Template Engine (Fixed)\r\n * ------------------------------------\r\n * ✅ Robust handling of attribute spreading\r\n * ✅ Pre-processes markup to avoid browser parsing issues\r\n * ✅ Maintains full reactivity support\r\n * ✅ Supports:\r\n *    - Reactive children via ${signal} or ${() => ...}\r\n *    - Object spread for attributes: ${props}\r\n *    - Static + dynamic string merge: class=\"a ${b} c\"\r\n *    - Safe event handler binding: oninput=\"${fn}\"\r\n *\r\n * 🧠 Fix Strategy:\r\n *    - Detects problematic ${props}> patterns\r\n *    - Converts them to data-vanilj-props attributes\r\n *    - Processes props objects before browser parsing\r\n *    - Maintains compatibility with existing components\r\n */\r\n","// packages/vanilj-core/src/index.js - Core framework entry point\r\n\r\n// Import everything from vanilj-core\r\nimport {\r\n  useVaniljPlugin,\r\n  runWithScopedEffects,\r\n  registerScopedEffectCleanup,\r\n  signal,\r\n  readonly,\r\n  computed,\r\n  effect,\r\n  safeEffect,\r\n  onCleanup,\r\n  batch,\r\n  isSignal,\r\n  wrap,\r\n  createElement,\r\n  tags,\r\n  mount,\r\n  unmount,\r\n  hydrate,\r\n  ref,\r\n  generateUUID,\r\n  generateShortUUID\r\n} from './vanilj-core.js';\r\n\r\n// Import HTML template system\r\nimport { html } from './html-template.js';\r\n\r\n// Re-export everything as named exports\r\nexport {\r\n  // Plugin system\r\n  useVaniljPlugin,\r\n  \r\n  // Scoped effects\r\n  runWithScopedEffects,\r\n  registerScopedEffectCleanup,\r\n  \r\n  // Reactivity system\r\n  signal,\r\n  readonly,\r\n  computed,\r\n  effect,\r\n  safeEffect,\r\n  onCleanup,\r\n  batch,\r\n  \r\n  // DOM system\r\n  isSignal,\r\n  wrap,\r\n  createElement,\r\n  tags,\r\n  \r\n  // Mount/unmount\r\n  mount,\r\n  unmount,\r\n  hydrate,\r\n  \r\n  // Refs\r\n  ref,\r\n  \r\n  // Utilities\r\n  generateUUID,\r\n  generateShortUUID,\r\n  \r\n  // HTML template system\r\n  html\r\n};\r\n\r\n// Default export - core vanilj object\r\nconst VaniljCore = {\r\n  // Core reactivity\r\n  signal,\r\n  readonly,\r\n  computed,\r\n  effect,\r\n  batch,\r\n  \r\n  // DOM\r\n  createElement,\r\n  tags,\r\n  mount,\r\n  unmount,\r\n  \r\n  // Template\r\n  html,\r\n  \r\n  // Utilities\r\n  ref,\r\n  generateUUID,\r\n  generateShortUUID\r\n};\r\n\r\nexport default VaniljCore;"],"names":["plugins","notifyPlugins","event","data","p","scopedCleanupStack","registerScopedEffectCleanup","fn","stack","length","push","effectStack","isBatching","pendingEffects","Set","currentCleanupStack","signal","initialValue","value","subscribers","s","add","newValue","notify","peek","subscribe","delete","toString","readonly","source","_","Error","computed","out","effect","c","cleanupFns","cleanup","forEach","run","unshift","cb","shift","batch","toRun","clear","svgTags","isSignal","x","deepFlatten","arr","flatMap","Array","isArray","wrap","child","Node","anchor","document","createComment","lastNodes","resolved","nodes","n","parentNode","removeChild","_a","insertBefore","frag","createDocumentFragment","w","appendChild","createTextNode","createElement","tag","props","children","el","has","createElementNS","key","val","Object","entries","startsWith","toLowerCase","isConnected","result","setAttribute","removeAttribute","node","tags","Proxy","get","bind","mount","target","unmount","ref","current","generateUUID","crypto","randomUUID","err","console","warn","replace","r","Math","random","generateShortUUID","slice","html","strings","values","template","markup","i","match","whitespace","index","innerHTML","trim","content","cloneNode","querySelectorAll","propsIndex","getAttribute","Number","bindAttribute","walker","createTreeWalker","NodeFilter","SHOW_COMMENT","nextNode","currentNode","nodeValue","placeholderNodes","parent","start","end","cur","nextSibling","next","remove","before","String","elements","placeholderRegex","placeholderSplitRegex","attr","attributes","spreadMatch","name","k","v","includes","dynamicParts","split","filter","part","map","isSingleFunction","isEventHandler","join","isDOMProp","apply","VaniljCore","existingNode","viewFn","rendered","replaceWith","pop","nodeRef"],"mappings":"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"}